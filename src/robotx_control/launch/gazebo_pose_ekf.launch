<launch>
    <!-- use imu and gps (vo, must run gps.launch) to get imu_data and fix message
    robot-pose-ekf is to convert imu and gps to odom_combined-->
    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
        <param name="output_frame" value="map"/>
        <param name="base_footprint_frame" value="base_link"/>
        <param name="freq" value="5.0"/>
        <param name="sensor_timeout" value="1.0"/>
        <param name="odom_used" value="false"/>
        <param name="imu_used" value="true"/>
        <param name="vo_used" value="true"/>
        <param name="debug" value="false"/>
        <param name="self_diagnose" value="true"/>
        <remap from="imu_data" to="/middle_middle_imu/imu/data" />
    </node>

    <!-- odom_combined to nav_messages/odom message-->
    <node pkg="robotx_control" type="odom_ekf.py" name="odom_ekf">
        <remap from="input" to="/robot_pose_ekf/odom_combined"/>
        <remap from="output" to="/odometry/filtered/global"/>
    </node>
    <!-- convert gps /fix message to /vo message -->
    <node name="gps_conv" pkg="gps_common" type="utm_odometry_node">
        <remap from="odom" to="vo"/>
        <remap from="fix" to="/navsat/fix"/>
        <param name="rot_covariance" value="99999"/>
        <param name="frame_id" value="gps_link"/>
    </node>
    <!-- imu filter -->
    <include file="$(find robotx_sensor)/launch/imu_filter.launch"/>
</launch>
