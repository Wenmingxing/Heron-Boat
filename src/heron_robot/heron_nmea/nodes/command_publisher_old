#!/usr/bin/env python

import rospy

from heron_nmea.nmea_helpers import RxHelper
from heron_msgs.msg import Drive, Helm, Course

from math import radians


class HelmPublisher(RxHelper):
  def __init__(self):
    self.pub = rospy.Publisher("cmd_helm", Helm, queue_size=1)
    self.listen("DEP", self._cb)

  def _cb(self, header, fields):
    heading_rate, thrust_pct = fields
    self.pub.publish(float(thrust_pct) * 0.01, -radians(float(heading_rate)))


class CoursePublisher(RxHelper):
  def __init__(self):
    self.pub = rospy.Publisher("cmd_course", Course, queue_size=1)
    self.listen("DEV", self._cb)

  def _cb(self, header, fields):
    yaw, speed = fields
    self.pub.publish(radians(90.0 - float(yaw)), float(speed))

class DrivePublisher(RxHelper):
  def __init__(self):
    self.pub = rospy.Publisher("cmd_drive", Drive, queue_size=1)
    self.listen("DIR", self._cb)

  def _cb(self, header, fields):
    left, right = fields
    self.pub.publish(float(left) * 0.01, float(right) * 0.01)



if __name__ == "__main__":
  rospy.init_node('nmea_command_handlers')
  HelmPublisher()
  CoursePublisher()
  DrivePublisher()
  rospy.spin()
