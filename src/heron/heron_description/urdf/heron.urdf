<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from heron.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
Copyright (c) 2012-2016, Clearpath Robotics
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Clearpath Robotics nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

This program contains the description of the robot base model for the Clearpath Heron
-->
<robot name="heron" xmlns:xacro="http://ros.org/wiki/xacro">
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="gray">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="dark_gray">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <link name="base_link">
    <inertial>
      <mass value="29"/>
      <!-- This is the pose of the inertial reference frame, relative to the link reference frame.
               The origin of the inertial reference frame needs to be at the center of gravity.
               The axes of the inertial reference frame do not need to be aligned with the
               principal axes of the inertia. -->
      <origin xyz="0 0 0"/>
      <!-- The 3x3 rotational inertia matrix. Because the rotational inertia matrix is symmetric,
               only 6 above-diagonal elements of this matrix are specified here, using the attributes
              ixx, ixy, ixz, iyy, iyz, izz.-->
      <inertia ixx="10" ixy="0" ixz="0" iyy="10" iyz="0" izz="10"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://heron_description/meshes/heron_base.stl"/>
      </geometry>
      <material name="dark_gray"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
        <!--making it slightly bigger in x and z direction-->
      </geometry>
    </collision>
  </link>
  <!-- Side Panels -->
  <joint name="base_left_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.34495 0.04959"/>
    <parent link="base_link"/>
    <child link="left_panel_link"/>
  </joint>
  <link name="left_panel_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0.00000000 0.00000000 0.00000000"/>
      <inertia ixx="0.01" ixy="0.00" ixz="0.00" iyy="0.01" iyz="0.00" izz="0.01"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://heron_description/meshes/left_panel.stl"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- The collision boundary for parts are taken into account by collision boundary of the base_link. -->
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <joint name="base_right_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 -0.34495 0.04959"/>
    <parent link="base_link"/>
    <child link="right_panel_link"/>
  </joint>
  <link name="right_panel_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0.00000000 0.00000000 0.00000000"/>
      <inertia ixx="0.01" ixy="0.00" ixz="0.00" iyy="0.01" iyz="0.00" izz="0.01"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://heron_description/meshes/right_panel.stl"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- The collision boundary for parts are taken into account by collision boundary of the base_link. -->
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-09" ixy="0.0" ixz="0.0" iyy="1e-09" iyz="0.0" izz="1e-09"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0.0 3.14159 1.5708" xyz="0.015 0.0 0.072"/>
  </joint>
  <link name="navsat_link"/>
  <joint name="navsat_joint" type="fixed">
    <parent link="base_link"/>
    <child link="navsat_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.015 -0.050 0.072"/>
  </joint>
  <!-- Bring in simulation data for Gazebo. -->
  <gazebo>
    <plugin filename="libgazebo_ros_planar_move.so" name="object_controller">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <robotNamespace>/</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>imu_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>10.0</updateRate>
      <bodyName>navsat_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>5.0 5.0 5.0</drift>
      <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
    </plugin>
  </gazebo>
  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="imu_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="navsat_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="left_panel_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <gazebo reference="right_panel_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <!-- Optional standard accessories, including their simulation data. The rendering
         of these into the final description is controlled by optenv variables, which
         default each one to off.-->
  <link name="rear_plate">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://heron_description/meshes/plain-rear-plate.stl"/>
      </geometry>
      <material name="dark_gray"/>
    </visual>
  </link>
  <joint name="rear_plate_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rear_plate"/>
    <origin xyz="-0.1915 0.0 0.001"/>
  </joint>
  <!-- Optional custom includes. -->
</robot>

