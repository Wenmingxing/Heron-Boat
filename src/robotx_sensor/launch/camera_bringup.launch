<launch> 
    <arg name="use_bow" default="false" />
    <arg name="use_port" default="false" />
    <arg name="use_starboard" default="false" />
    <arg name="use_transom" default="false" />
    <arg name="use_underwater" default="false" />
    <arg name="bow_left_camera_ip" default="192.168.0.100" />
    <arg name="underwater_camera_ip" default="192.168.0.101" />
    <arg name="starboard_camera_ip" default="192.168.0.102" />
    <arg name="bow_right_camera_ip" default="192.168.0.103" />
    <arg name="transom_camera_ip" default="192.168.0.104" />
    <arg name="port_camera_ip" default="192.168.0.105" />

    <arg name="image_width" default="640" />
    <arg name="image_height" default="480" />
    <arg name="enable_theora" default="1" />

    <arg name="debug_mode_enable" value="0"/> 

    <master auto="start" />
    <group ns="bow/left" if="$(arg use_bow)">
        <node pkg="robotx_control" type="axis.py" name="camera_node" output="screen">
            <param name="hostname" value="$(arg bow_left_camera_ip)" />
            <param name="username" value="root" />
            <param name="password" value="pass"/>
            <param name="width" value="$(arg image_width)" />
            <param name="height" value="$(arg image_height)" />
            <param name="frame_id" value="camera"/>
            <param name="camera_info_url" type="string" value="package://robotx_control/camera_info/bow_left_camera.yaml"/>
        </node>

        <node pkg="image_transport" type="republish" name="republish"
            args="compressed" if="$(arg enable_theora)">
            <remap from="in" to="image_raw" />
            <remap from="out" to="image_raw_out" />
        </node>
        <node pkg="image_view" type="image_view" name="image_view" 
            if="$(arg debug_mode_enable)"> 
            <param name="image_transport" value="compressed" />
            <remap from="image" to="image_rect_color" />
        </node>

        <node name="image_proc" pkg="image_proc" type="image_proc" output="screen">
            <remap from="image_raw" to="image_raw_out"/>
            <remap from="camera_info" to="camera_info"/>
            <param name="queue_size" value="20"/>
        </node>
    </group>

    <group ns="bow/right" if="$(arg use_bow)">
        <node pkg="robotx_control" type="axis.py" name="camera_node" output="screen">
            <param name="hostname" value="$(arg bow_right_camera_ip)" />
            <param name="username" value="root" />
            <param name="password" value="pass"/>
            <param name="width" value="$(arg image_width)" />
            <param name="height" value="$(arg image_height)" />
            <param name="frame_id" value="camera"/>
            <param name="camera_info_url" type="string" value="package://robotx_control/camera_info/bow_right_camera.yaml"/>
        </node>

        <node pkg="image_transport" type="republish" name="republish"
            args="compressed" if="$(arg enable_theora)">
            <remap from="in" to="image_raw" />
            <remap from="out" to="image_raw_out" />
        </node>
        <node pkg="image_view" type="image_view" name="image_view" 
            if="$(arg debug_mode_enable)"> 
            <param name="image_transport" value="compressed" />
            <remap from="image" to="image_rect_color" />
        </node>

        <node name="image_proc" pkg="image_proc" type="image_proc" output="screen">
            <remap from="image_raw" to="image_raw_out"/>
            <remap from="camera_info" to="camera_info"/>
            <param name="queue_size" value="20"/>
        </node>
    </group>

    <group ns="starboard" if="$(arg use_starboard)">
        <node pkg="robotx_control" type="axis.py" name="camera_node" output="screen">
            <param name="hostname" value="$(arg starboard_camera_ip)" />
            <param name="username" value="root" />
            <param name="password" value="pass"/>
            <param name="width" value="$(arg image_width)" />
            <param name="height" value="$(arg image_height)" />
            <param name="frame_id" value="camera"/>
            <param name="camera_info_url" type="string" value="package://robotx_control/camera_info/starboard_camera.yaml"/>
        </node>

        <node pkg="image_transport" type="republish" name="republish"
            args="compressed" if="$(arg enable_theora)">
            <remap from="in" to="image_raw" />
            <remap from="out" to="image_raw_out" />
        </node>
        <node pkg="image_view" type="image_view" name="image_view" 
            if="$(arg debug_mode_enable)"> 
            <param name="image_transport" value="compressed" />
            <remap from="image" to="image_rect_color" />
        </node>

        <node name="image_proc" pkg="image_proc" type="image_proc" output="screen">
            <remap from="image_raw" to="image_raw_out"/>
            <remap from="camera_info" to="camera_info"/>
            <param name="queue_size" value="20"/>
        </node>
    </group>

    <group ns="port" if="$(arg use_port)">
        <node pkg="robotx_control" type="axis.py" name="camera_node" output="screen">
            <param name="hostname" value="$(arg port_camera_ip)" />
            <param name="username" value="root" />
            <param name="password" value="pass"/>
            <param name="width" value="$(arg image_width)" />
            <param name="height" value="$(arg image_height)" />
            <param name="frame_id" value="camera"/>
            <param name="camera_info_url" type="string" value="package://robotx_control/camera_info/port_camera.yaml"/>
        </node>

        <node pkg="image_transport" type="republish" name="republish"
            args="compressed" if="$(arg enable_theora)">
            <remap from="in" to="image_raw" />
            <remap from="out" to="image_raw_out" />
        </node>
        <node pkg="image_view" type="image_view" name="image_view" 
            if="$(arg debug_mode_enable)"> 
            <param name="image_transport" value="compressed" />
            <remap from="image" to="image_rect_color" />
        </node>

        <node name="image_proc" pkg="image_proc" type="image_proc" output="screen">
            <remap from="image_raw" to="image_raw_out"/>
            <remap from="camera_info" to="camera_info"/>
            <param name="queue_size" value="20"/>
        </node>
    </group>

    <group ns="transom" if="$(arg use_transom)">
        <node pkg="robotx_control" type="axis.py" name="camera_node" output="screen">
            <param name="hostname" value="$(arg transom_camera_ip)" />
            <param name="username" value="root" />
            <param name="password" value="pass"/>
            <param name="width" value="$(arg image_width)" />
            <param name="height" value="$(arg image_height)" />
            <param name="frame_id" value="camera"/>
            <param name="camera_info_url" type="string" value="package://robotx_control/camera_info/transom_camera.yaml"/>
        </node>

        <node pkg="image_transport" type="republish" name="republish"
            args="compressed" if="$(arg enable_theora)">
            <remap from="in" to="image_raw" />
            <remap from="out" to="image_raw_out" />
        </node>

        <node pkg="image_view" type="image_view" name="image_view" 
            if="$(arg debug_mode_enable)"> 
            <param name="image_transport" value="compressed" />
            <remap from="image" to="image_rect_color" />
        </node>

        <node name="image_proc" pkg="image_proc" type="image_proc" output="screen">
            <remap from="image_raw" to="image_raw_out"/>
            <remap from="camera_info" to="camera_info"/>
            <param name="queue_size" value="20"/>
        </node>
    </group>
    <group ns="underwater" if="$(arg use_underwater)">
        <node pkg="robotx_control" type="axis.py" name="camera_node" output="screen">
            <param name="hostname" value="$(arg underwater_camera_ip)" />
            <param name="username" value="root" />
            <param name="password" value="pass"/>
            <param name="width" value="$(arg image_width)" />
            <param name="height" value="$(arg image_height)" />
            <param name="frame_id" value="camera"/>
            <param name="camera_info_url" type="string" value="package://robotx_control/camera_info/underwater_camera.yaml"/>
        </node>

        <node pkg="image_transport" type="republish" name="republish"
            args="compressed" if="$(arg enable_theora)">
            <remap from="in" to="image_raw" />
            <remap from="out" to="image_raw_out" />
        </node>
        <node pkg="image_view" type="image_view" name="image_view" 
            if="$(arg debug_mode_enable)"> 
            <param name="image_transport" value="compressed" />
            <remap from="image" to="image_rect_color" />
        </node>

        <node name="image_proc" pkg="image_proc" type="image_proc" output="screen">
            <remap from="image_raw" to="image_raw_out"/>
            <remap from="camera_info" to="camera_info"/>
            <param name="queue_size" value="20"/>
        </node>
    </group>

    <node pkg="tf" type="static_transform_publisher" name="my_tf" args="0 0 0 0 0 0 /map /axis_camera 100"/>
</launch>
